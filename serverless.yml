service: ares
excludeDevDependencies: false
#plugins:
#  - serverless-offline
#  - serverless-finch
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  environment:
    DYNAMODB_BASE: ${self:service}-${opt:stage, self:provider.stage}
    GUILD_MAZE_STATUS_INFO: ${self:provider.environment.DYNAMODB_BASE}-GuildMazeStatusInfo
    GUILD_MAZE_STATUS_INFO_PARTICIPATION: ${self:provider.environment.GUILD_MAZE_STATUS_INFO}-Participation
    GUILD_MAZE_STATUS_INFO_SETUP_VALUES: ${self:provider.environment.GUILD_MAZE_STATUS_INFO}-SetupValues
    GUILD_MAZE_STATUS_INFO_MAP_INFO: ${self:provider.environment.GUILD_MAZE_STATUS_INFO}-MapInfo
    GUILD_MAZE_STATUS_INFO_TILES: ${self:provider.environment.GUILD_MAZE_STATUS_INFO}-Tiles
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_BASE}*"
package:
  excludeDevDependencies: false
  exclude:
    - ./**
  include:
    - index.js
    - src/**
    - config/**
    - node_modules/**
    - openapi.yaml

functions:
  ares:
    handler: index.handler
    events:
      - http:
          path: guilds/{guildId}/mazes/{mazeId}/guildmazestatusinfo
          method: post
          cors: true
          request:
            parameters:
              paths:
                guildId: true
                mazeId: true
      - http:
          path: guilds/{guildId}/mazes/{mazeId}/guildmazestatusinfo
          method: get
          cors: true
          request:
            parameters:
              paths:
                guildId: true
                mazeId: true
custom:
  client:
    bucketName: ares-www
    distributionFolder: docs
